}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
print(altesgr2)
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- levels(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- levels(mara$Altersgr[pos[1]+1])
}
print(altersgr2)
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- mara$Altersgr[pos[1]-1]
} else {
altersgr2 <- mara$Altersgr[pos[1]+1]
}
print(altersgr2)
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- mara$Altersgr[pos[1]-1]
} else {
altersgr2 <- mara$Altersgr[pos[1]+1]
}
print(altersgr2)
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- mara$Altersgr[pos[1]-1]
} else {
altersgr2 <- mara$Altersgr[pos[1]+1]
}
print(altersgr2)
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- mara$Altersgr[pos[1]-1]
} else {
altersgr2 <- mara$Altersgr[pos[1]+1]
}
print(altersgr2)
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- mara$Altersgr[pos[1]-1]
} else {
altersgr2 <- mara$Altersgr[pos[1]+1]
}
print(altersgr2)
print(altersgr)
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- as.character(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- as.character(mara$Altersgr[pos[1]+1])
}
print(altersgr2)
print(altersgr)
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- as.character(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- as.character(mara$Altersgr[pos[1]+1])
}
file.edit("~/.Renviron")
Sys.which("pdflatex")
Sys.which("pdflatex")
Sys.which("pdflatex")
file.edit("~/.Renviron")
Sys.setenv(PATH = paste("C:/Users/Volodymyr/AppData/Local/Programs/MiKTeX/miktex/bin/x64", Sys.getenv("PATH"), sep = ";"))
Sys.which("pdflatex")
Sys.setenv(PATH = paste("C:/Users/Volodymyr/AppData/Local/Programs/MiKTeX/miktex/bin/x64", Sys.getenv("PATH"), sep = ";"))
unlink("C:/Users/Volodymyr/Desktop/EDV1/Markdown_cache", recursive = TRUE)
load("Marathon.RData")
set.seed(12329558)
load("Marathon.RData")
set.seed(12329558)
jahr <- sample(levels(mara[,4]),1)
altersgr <- sample(levels(mara[,3]), 1)
df <- mara[mara[,4] == jahr & mara[,3] == altersgr, ]
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- as.character(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- as.character(mara$Altersgr[pos[1]+1])
}
df2 <- mara[mara[, 4] == jahr & mara[, 3] == altersgr2, ]
par(mfrow = c(1, 2))
hist(df$Total,
xlab = "Total",
ylab = "Häufigkeit",
main = paste("Hist of", jahr, " and AG:", altersgr ))
hist(df2$Total,
xlab = "Total",
ylab = "Häufigkeit",
xlim = c(min(df$Total, df2$Total), max(df$Total, df2$Total)),
main = paste("Hist of ", jahr, " and AG:", altersgr2 ))
par(mfrow = c(1, 1))
boxplot(df$Total, df2$Total,
names = c(altersgr, altersgr2),
ylab = "Total",
main = paste("Boxplots der Gesamtzeiten für Jahr", jahr)
)
stats_df <- c(Minimum = min(df$Total),
Maximum = max(df$Total),
Mittelwert = mean(df$Total),
Median = median(df$Total),
"Q" = quantile(df$Total, probs = 0.25),
"Q" = quantile(df$Total, probs = 0.75),
Varianz = var(df$Total),
Standardabweichung = sd(df$Total))
stats_df2 <- c(Minimum_df2 = min(df2$Total),
Maximum_df2 = max(df2$Total),
Mittelwert_df2 = mean(df2$Total),
Median_df2 = median(df2$Total),
Quartile_025df2 = quantile(df2$Total, probs = 0.25),
Quartile_075df2 = quantile(df2$Total, probs = 0.75),
Varianz_df2 = var(df2$Total),
Std_df2 = sd(df2$Total))
stats_table <-data.frame(
Statistik = names(stats_df),
stats_M_55 = stats_df,
stats_M_H = stats_df2,
row.names = NULL,
check.names = FALSE
)
print(stats_table)
df <- data.frame(
Name = c("Volodymyr", "Max", "Otto", "Kevin", "John", "Mark", "Serhii", "Zoe"),
City = c("Vienna", "Dnipro", "Innsbruck", "Budapest", "Bratislava", "Kyiv", "Lviv", "Praha"),
Age = c(19, 32, 29, 45, 38, 41, 27, 36)
)
head(df)
total_length <- length(df$Total)
total_mean <- mean(df$Total)
total_std <- sd(df$Total)
total_skewness <- (total_length * sum((df$Total-total_mean)^3))/((total_length - 1) * (total_length-2) * total_std^3)
print(total_skewness)
df$Total <- as.numeric(as.character(df$Total))
total_length <- length(df$Total)
total_mean <- mean(df$Total)
total_std <- sd(df$Total)
total_skewness <- (total_length * sum((df$Total-total_mean)^3))/((total_length - 1) * (total_length-2) * total_std^3)
is.numeric(df$Total)
df$Total <- as.numeric(df$Total)
df$Total <- as.numeric(df$Total)
df$Total <- as.numeric(as.character(df$Total))
total_length <- length(df$Total)
total_mean <- mean(df$Total)
total_std <- sd(df$Total)
total_skewness <- (total_length * sum((df$Total-total_mean)^3))/((total_length - 1) * (total_length-2) * total_std^3)
load("Marathon.RData")
set.seed(12329558)
load("Marathon.RData")
set.seed(12329558)
jahr <- sample(levels(mara[,4]),1)
altersgr <- sample(levels(mara[,3]), 1)
df <- mara[mara[,4] == jahr & mara[,3] == altersgr, ]
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- as.character(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- as.character(mara$Altersgr[pos[1]+1])
}
df2 <- mara[mara[, 4] == jahr & mara[, 3] == altersgr2, ]
par(mfrow = c(1, 2))
hist(df$Total,
xlab = "Total",
ylab = "Häufigkeit",
main = paste("Hist of", jahr, " and AG:", altersgr ))
hist(df2$Total,
xlab = "Total",
ylab = "Häufigkeit",
xlim = c(min(df$Total, df2$Total), max(df$Total, df2$Total)),
main = paste("Hist of ", jahr, " and AG:", altersgr2 ))
par(mfrow = c(1, 1))
boxplot(df$Total, df2$Total,
names = c(altersgr, altersgr2),
ylab = "Total",
main = paste("Boxplots der Gesamtzeiten für Jahr", jahr)
)
stats_df <- c(Minimum = min(df$Total),
Maximum = max(df$Total),
Mittelwert = mean(df$Total),
Median = median(df$Total),
"Q" = quantile(df$Total, probs = 0.25),
"Q" = quantile(df$Total, probs = 0.75),
Varianz = var(df$Total),
Standardabweichung = sd(df$Total))
stats_df2 <- c(Minimum_df2 = min(df2$Total),
Maximum_df2 = max(df2$Total),
Mittelwert_df2 = mean(df2$Total),
Median_df2 = median(df2$Total),
Quartile_025df2 = quantile(df2$Total, probs = 0.25),
Quartile_075df2 = quantile(df2$Total, probs = 0.75),
Varianz_df2 = var(df2$Total),
Std_df2 = sd(df2$Total))
stats_table <-data.frame(
Statistik = names(stats_df),
stats_M_55 = stats_df,
stats_M_H = stats_df2,
row.names = NULL,
check.names = FALSE
)
print(stats_table)
df <- data.frame(
Name = c("Volodymyr", "Max", "Otto", "Kevin", "John", "Mark", "Serhii", "Zoe"),
City = c("Vienna", "Dnipro", "Innsbruck", "Budapest", "Bratislava", "Kyiv", "Lviv", "Praha"),
Age = c(19, 32, 29, 45, 38, 41, 27, 36)
)
head(df)
total_length <- length(df$Total)
total_mean <- mean(df$Total)
total_std <- sd(df$Total)
total_skewness <- (total_length * sum((df$Total - total_mean)^3))/((total_length - 1) * (total_length-2) * total_std^3)
total_length <- length(df$Total)
total_mean <- mean(df$Total)
total_std <- sd(df$Total)
total_skewness <- (total_length * sum((df$Total - total_mean)^3))/((total_length - 1) * (total_length - 2) * total_std^3)
class(df$Total)
str(df$Total)
load("Marathon.RData")
set.seed(12329558)
load("Marathon.RData")
set.seed(12329558)
setwd("C:/Users/Volodymyr/Desktop/EDV1")
load("Marathon.RData")
set.seed(12329558)
jahr <- sample(levels(mara[,4]),1)
altersgr <- sample(levels(mara[,3]), 1)
df <- mara[mara[,4] == jahr & mara[,3] == altersgr, ]
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- as.character(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- as.character(mara$Altersgr[pos[1]+1])
}
df2 <- mara[mara[, 4] == jahr & mara[, 3] == altersgr2, ]
par(mfrow = c(1, 2))
hist(df$Total,
xlab = "Total",
ylab = "Häufigkeit",
main = paste("Hist of", jahr, " and AG:", altersgr ))
hist(df2$Total,
xlab = "Total",
ylab = "Häufigkeit",
xlim = c(min(df$Total, df2$Total), max(df$Total, df2$Total)),
main = paste("Hist of ", jahr, " and AG:", altersgr2 ))
par(mfrow = c(1, 1))
boxplot(df$Total, df2$Total,
names = c(altersgr, altersgr2),
ylab = "Total",
main = paste("Boxplots der Gesamtzeiten für Jahr", jahr)
)
stats_df <- c(Minimum = min(df$Total),
Maximum = max(df$Total),
Mittelwert = mean(df$Total),
Median = median(df$Total),
"Q" = quantile(df$Total, probs = 0.25),
"Q" = quantile(df$Total, probs = 0.75),
Varianz = var(df$Total),
Standardabweichung = sd(df$Total))
stats_df2 <- c(Minimum_df2 = min(df2$Total),
Maximum_df2 = max(df2$Total),
Mittelwert_df2 = mean(df2$Total),
Median_df2 = median(df2$Total),
Quartile_025df2 = quantile(df2$Total, probs = 0.25),
Quartile_075df2 = quantile(df2$Total, probs = 0.75),
Varianz_df2 = var(df2$Total),
Std_df2 = sd(df2$Total))
stats_table <-data.frame(
Statistik = names(stats_df),
stats_M_55 = stats_df,
stats_M_H = stats_df2,
row.names = NULL,
check.names = FALSE
)
print(stats_table)
df <- data.frame(
Name = c("Volodymyr", "Max", "Otto", "Kevin", "John", "Mark", "Serhii", "Zoe"),
City = c("Vienna", "Dnipro", "Innsbruck", "Budapest", "Bratislava", "Kyiv", "Lviv", "Praha"),
Age = c(19, 32, 29, 45, 38, 41, 27, 36)
)
head(df)
total_length <- length(df$Total)
total_mean <- mean(df$Total)
total_std <- sd(df$Total)
total_skewness <- (total_length * sum((df$Total - total_mean)^3))/((total_length - 1) * (total_length - 2) * total_std^3)
total_length <- length(df$Total)
total_mean <- mean(df$Total)
total_std <- sd(df$Total)
total_skewness <- (total_length * sum((df$Total - total_mean)^3))/((total_length - 1) * (total_length - 2) * total_std^3)
total_length <- length(df$Total)
total_mean <- mean(df$Total)
total_std <- sd(df$Total)
total_skewness <- (total_length * sum((df$Total - total_mean)^3))/((total_length - 1) * (total_length - 2) * total_std^3)
load("Marathon.RData")
set.seed(12329558)
jahr <- sample(levels(mara[,4]),1)
altersgr <- sample(levels(mara[,3]), 1)
df <- mara[mara[,4] == jahr & mara[,3] == altersgr, ]
altersgr2 <- NA
pos <- which(altersgr == mara$Altersgr)
if(pos[1] == length(mara$Altersgr)){
altersgr2 <- as.character(mara$Altersgr[pos[1]-1])
} else {
altersgr2 <- as.character(mara$Altersgr[pos[1]+1])
}
df2 <- mara[mara[, 4] == jahr & mara[, 3] == altersgr2, ]
par(mfrow = c(1, 2))
hist(df$Total,
xlab = "Total",
ylab = "Häufigkeit",
main = paste("Hist of", jahr, " and AG:", altersgr ))
hist(df2$Total,
xlab = "Total",
ylab = "Häufigkeit",
xlim = c(min(df$Total, df2$Total), max(df$Total, df2$Total)),
main = paste("Hist of ", jahr, " and AG:", altersgr2 ))
par(mfrow = c(1, 1))
boxplot(df$Total, df2$Total,
names = c(altersgr, altersgr2),
ylab = "Total",
main = paste("Boxplots der Gesamtzeiten für Jahr", jahr)
)
stats_df <- c(Minimum = min(df$Total),
Maximum = max(df$Total),
Mittelwert = mean(df$Total),
Median = median(df$Total),
"Q" = quantile(df$Total, probs = 0.25),
"Q" = quantile(df$Total, probs = 0.75),
Varianz = var(df$Total),
Standardabweichung = sd(df$Total))
stats_df2 <- c(Minimum_df2 = min(df2$Total),
Maximum_df2 = max(df2$Total),
Mittelwert_df2 = mean(df2$Total),
Median_df2 = median(df2$Total),
Quartile_025df2 = quantile(df2$Total, probs = 0.25),
Quartile_075df2 = quantile(df2$Total, probs = 0.75),
Varianz_df2 = var(df2$Total),
Std_df2 = sd(df2$Total))
stats_table <-data.frame(
Statistik = names(stats_df),
stats_M_55 = stats_df,
stats_M_H = stats_df2,
row.names = NULL,
check.names = FALSE
)
print(stats_table)
df_test <- data.frame(
Name = c("Volodymyr", "Max", "Otto", "Kevin", "John", "Mark", "Serhii", "Zoe"),
City = c("Vienna", "Dnipro", "Innsbruck", "Budapest", "Bratislava", "Kyiv", "Lviv", "Praha"),
Age = c(19, 32, 29, 45, 38, 41, 27, 36)
)
head(df_test)
total_length <- length(df$Total)
total_mean <- mean(df$Total)
total_std <- sd(df$Total)
total_skewness <- (total_length * sum((df$Total - total_mean)^3))/((total_length - 1) * (total_length - 2) * total_std^3)
